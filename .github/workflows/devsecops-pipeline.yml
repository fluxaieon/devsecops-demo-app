name: DevSecOps CI/CD

on:
  push:
    branches: [ "main", "devsecops-demo-pass-pipeline" ]
  pull_request:
    branches: [ "main", "devsecops-demo-pass-pipeline" ]

jobs:
  build-test-scan-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: devsecops-demo-app
      ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
      ARTIFACTORY_USER: ${{ secrets.ARTIFACTORY_USER }}
      ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run SAST (Semgrep)
        uses: returntocorp/semgrep-action@v1
        with:
          config: auto

      - name: Log in to JFrog Artifactory Docker Registry
        run: echo $ARTIFACTORY_PASSWORD | docker login $ARTIFACTORY_URL -u $ARTIFACTORY_USER --password-stdin

      - name: Build Backend Docker Image
        run: docker build -t $ARTIFACTORY_URL/${IMAGE_NAME}-backend:latest ./backend

      - name: Push Backend Docker Image
        run: docker push $ARTIFACTORY_URL/${IMAGE_NAME}-backend:latest

      - name: Build Frontend Docker Image
        run: docker build -t $ARTIFACTORY_URL/${IMAGE_NAME}-frontend:latest ./frontend

      - name: Push Frontend Docker Image
        run: docker push $ARTIFACTORY_URL/${IMAGE_NAME}-frontend:latest

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.0

      - name: Set up Kubeconfig for kind
        run: |
          kind get kubeconfig > ~/.kube/config
          kubectl config use-context kind-kind

      - name: Deploy to Kubernetes using Helm
        run: |
          helm upgrade --install elo-app ./charts/elo-app --namespace dev --create-namespace

      - name: Run OWASP ZAP Baseline DAST Scan
        uses: zaproxy/action-baseline@v0.9.0
        with:
          target: 'http://localhost:3000'
